parameters:
  - name: dotnet_configuration
    type: object
    default:
      - Release
  - name: AgentOS
    type: string
    default: ''

steps:
- bash: |
    echo "##vso[task.setvariable variable=AgentOS;]${{ parameters.AgentOS }}"
    echo "##vso[task.setvariable variable=dotnet_configuration;]${{ parameters.dotnet_configuration }}"
- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
  condition: and(succeededOrFailed(), not(eq(variables['Build.Reason'], 'PullRequest')))
  inputs:
    ignoreDirectories: 'MSStore.CLI.UnitTests'
- task: CredScan@3
  condition: startsWith(variables.AgentOS, 'Windows_NT')
  inputs:
    suppressionsFile: '$(System.DefaultWorkingDirectory)\.pipelines\CredScanSuppressions.json'
- task: BinSkim@4
  displayName: Run Binskim Analysis
  condition: and(succeeded(), startsWith(variables.dotnet_configuration, 'Release'), startsWith(variables.AgentOS, 'Windows_NT'))
  inputs:
    InputType: 'Basic'
    Function: 'analyze'
    TargetPattern: guardianGlob
    AnalyzeTargetGlob: '$(System.DefaultWorkingDirectory)\MSStore.API\bin\${{ parameters.dotnet_configuration }}\net7.0\MSStore.API.dll'
    AnalyzeVerbose: true
    toolVersion: 'Latest'
- task: PoliCheck@2
  displayName: 'Run PoliCheck'
  condition: and(succeeded(), startsWith(variables.dotnet_configuration, 'Release'), startsWith(variables.AgentOS, 'Windows_NT'))
  inputs:
    targetType: F
    targetArgument: $(Build.SourcesDirectory)
    termTypeT: 0029a9
    toolVersion: Latest
  continueOnError: true
- task: SdtReport@2
  condition: and(startsWith(variables.dotnet_configuration, 'Release'), startsWith(variables.AgentOS, 'Windows_NT'))
  inputs:
    GdnExportAllTools: true
- task: PublishSecurityAnalysisLogs@3
  displayName: 'Publish Guardian Artifacts'
  condition: and(succeededOrFailed(), startsWith(variables.dotnet_configuration, 'Release'), startsWith(variables.AgentOS, 'Windows_NT'))
- task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@2
  displayName: 'Post Analysis'
  condition: and(startsWith(variables.dotnet_configuration, 'Release'), startsWith(variables.AgentOS, 'Windows_NT'))
  inputs:
    GdnBreakAllTools: false
    GdnBreakGdnToolBinSkim: true